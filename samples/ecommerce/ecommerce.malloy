--! styles ecommerce.styles.json
explore: users is table('malloy-data.ecomm.users'){
  primary_key: id
  measure: user_count is count()
}

explore: product is table('malloy-data.ecomm.products'){
  primary_key: id
  measure: product_count is count()
}

explore: ii is table('malloy-data.ecomm.inventory_items'){
  primary_key: id

  join_one: product with product_id

  measure: [
    item_count is count(distinct id)
    total_cost is sum(cost)
  ]
}

explore: user_order_facts is from(
    table('malloy-data.ecomm.order_items') ->  {
      group_by: user_id
      aggregate: lifetime_orders is count()
    }
  ) { primary_key: user_id }

explore: order_items_base is table('malloy-data.ecomm.order_items'){
  primary_key: id

  join_one: [
    users with user_id
    ii with inventory_item_id
    user_order_facts with user_id
  ]

  measure: [
    order_count is count(distinct order_id)
    item_count is count()
    total_sales is sale_price.sum()
  ]
}

explore: brand_synergy is from(
  order_items_base -> {
    group_by: order_id
    nest: brand1 is { group_by: ii.product.brand }
    nest: brand2 is { group_by: ii.product.brand }
  } -> {
    where: brand1.brand != brand2.brand
    project: order_id
    project: brand1 is brand1.brand
    project: brand2 is brand2.brand
  } -> {
    group_by: [
      brand1
      brand2
    ]
    aggregate: occurances is count()
  } -> {
    group_by: brand is brand1
    nest: synergies is {
      top: 5
      order_by: occurances
      group_by: [
        brand is brand2
        occurances
      ]
    }
  }
)

// order_items with brand_synergy as well as base definitions.
explore: order_items is order_items_base {
  // join_one: brand_synergy with ii.product.brand

  query: top_brands is {
    top: 5
    order_by: total_sales
    group_by: ii.product.brand
    aggregate: [
      total_sales
      ii.product.product_count
    ]
  }

  query: top_products is {
    top: 5
    group_by: ii.product.name
    aggregate: total_sales
  }

  query: by_year is {
    group_by: created_year is created_at.year
    aggregate: total_sales
  }

  query: by_month is {
    group_by: created_month is created_at.month
    aggregate: total_sales
  }

  query: sales_by_state_2020 is {
    where: created_at = @2020
    group_by: users.state
    aggregate: total_sales
  }

  query: sales_by_month_2020 is {
    where: created_at = @2020
    group_by: order_month is created_at.month
    aggregate: total_sales
  }

  query: orders_by_status is {
    group_by: status
    aggregate: order_count is count(distinct order_id)
  }

  query: order_by_category_and_day is {
    group_by: [
      created_month is created_at.month
      ii.product.category
    ]
    aggregate: order_count
  }

  query: brand_dashboard is {
    top: 10
    group_by: [
      ii.product.brand
    ]
    aggregate: [
      total_sales
      order_count
      item_count
      ii.product.product_count
    ]
    nest: [
      top_products
      by_month
    ]
    // nest: synergistic_brands is {
    //   group_by: brand_synergy.synergies.brand
    //   aggregate: occurances is brand_synergy.synergies.occurances.sum()
    // }
  }
}

query: order_items -> {
  aggregate: average_age is users.age.avg()
}

query: users -> {
  aggregate: average_age is age.avg()
}
